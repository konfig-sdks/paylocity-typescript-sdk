/*
WebLink API

For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

The version of the OpenAPI document: v2
Contact: webservices@paylocity.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AdditionalRatesApi,
  ClientCredentialsApi,
  CompanyCodesApi,
  CompanySpecificSchemaApi,
  CustomFieldsApi,
  DeductionApi,
  DirectDepositApi,
  EarningsApi,
  EmergencyContactsApi,
  EmployeeApi,
  EmployeeV1Api,
  EmployeeBenefitSetupApi,
  EmployeeStagingApi,
  LocalTaxApi,
  LocalTaxesApi,
  NonPrimaryStateTaxApi,
  OnboardingApi,
  PayStatementsApi,
  PrimaryStateTaxApi,
  SensitiveDataApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { PaylocityCustom } from "./client-custom";

export class Paylocity extends PaylocityCustom {
  readonly additionalRates: AdditionalRatesApi;
  readonly clientCredentials: ClientCredentialsApi;
  readonly companyCodes: CompanyCodesApi;
  readonly companySpecificSchema: CompanySpecificSchemaApi;
  readonly customFields: CustomFieldsApi;
  readonly deduction: DeductionApi;
  readonly directDeposit: DirectDepositApi;
  readonly earnings: EarningsApi;
  readonly emergencyContacts: EmergencyContactsApi;
  readonly employee: EmployeeApi;
  readonly employeeV1: EmployeeV1Api;
  readonly employeeBenefitSetup: EmployeeBenefitSetupApi;
  readonly employeeStaging: EmployeeStagingApi;
  readonly localTax: LocalTaxApi;
  readonly localTaxes: LocalTaxesApi;
  readonly nonPrimaryStateTax: NonPrimaryStateTaxApi;
  readonly onboarding: OnboardingApi;
  readonly payStatements: PayStatementsApi;
  readonly primaryStateTax: PrimaryStateTaxApi;
  readonly sensitiveData: SensitiveDataApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.additionalRates = new AdditionalRatesApi(configuration);
    this.clientCredentials = new ClientCredentialsApi(configuration);
    this.companyCodes = new CompanyCodesApi(configuration);
    this.companySpecificSchema = new CompanySpecificSchemaApi(configuration);
    this.customFields = new CustomFieldsApi(configuration);
    this.deduction = new DeductionApi(configuration);
    this.directDeposit = new DirectDepositApi(configuration);
    this.earnings = new EarningsApi(configuration);
    this.emergencyContacts = new EmergencyContactsApi(configuration);
    this.employee = new EmployeeApi(configuration);
    this.employeeV1 = new EmployeeV1Api(configuration);
    this.employeeBenefitSetup = new EmployeeBenefitSetupApi(configuration);
    this.employeeStaging = new EmployeeStagingApi(configuration);
    this.localTax = new LocalTaxApi(configuration);
    this.localTaxes = new LocalTaxesApi(configuration);
    this.nonPrimaryStateTax = new NonPrimaryStateTaxApi(configuration);
    this.onboarding = new OnboardingApi(configuration);
    this.payStatements = new PayStatementsApi(configuration);
    this.primaryStateTax = new PrimaryStateTaxApi(configuration);
    this.sensitiveData = new SensitiveDataApi(configuration);
  }

}
